<Project Sdk="DarkPatterns.Build.Pnpm/0.1.15">
	<PropertyGroup>
		<VersionPrefix>$(OpenApiTypeScriptClientVersion)</VersionPrefix>
		<PackPnpmOnBuild Condition=" $(Configuration) == 'Release' ">false</PackPnpmOnBuild>
	</PropertyGroup>

	<ItemGroup>
		<Schemas Include="$(SolutionRoot)schemas/*.yaml" />
		<Schemas Remove="$(SolutionRoot)schemas/bad*.yaml" />
		<!-- TODO: Support OpenAPI 3.1 -->
		<Schemas Remove="$(SolutionRoot)schemas/exclusive-range-openapi-3_1.yaml" />
		<Schemas Remove="$(SolutionRoot)schemas/multi-file-ref-*.yaml" />
		<Schemas Update="$(SolutionRoot)schemas/*">
			<DestinationFolder>$([MSBuild]::NormalizeDirectory('$(ProjectDir)', '%(Schemas.filename)%(Schemas.extension)'))</DestinationFolder>
		</Schemas>
		<SchemaGenerationScripts Include="node_modules/@darkpatternsdigital/openapi-codegen-typescript/bin/**/*" />
		<SchemaGenerationScripts Include="node_modules/@darkpatternsdigital/openapi-codegen-typescript/dotnet/**/*" />
		<SchemaFolderOutputs Include="$([MSBuild]::NormalizePath('%(Schemas.DestinationFolder)', '.gitignore'))" />
		<SchemaFolderVerificationOutputs Include="dist/tsconfig.tsbuildinfo" />
		<Clean Include="dist/**/*" />
	</ItemGroup>

	<Target Name="CleanSchemaFolders" BeforeTargets="CoreClean">
		<RemoveDir Directories="%(Schemas.DestinationFolder)" />
	</Target>

	<Target Name="GenerateSchemaFolders"
	        DependsOnTargets="PnpmInstall;ResolveReferences"
	        BeforeTargets="Generate"
	        Inputs="@(Schemas);@(SchemaGenerationScripts)"
	        Outputs="@(SchemaFolderOutputs)">
		<Exec WorkingDirectory="$(ProjectDir)"
			Command="pnpm openapi-codegen-typescript &quot;%(Schemas.Identity)&quot; &quot;$([MSBuild]::NormalizeDirectory('%(Schemas.DestinationFolder)').Replace('\', '/'))&quot; -c" />
	</Target>

	<Target Name="VerifyGenerateSchemaFolders" AfterTargets="GenerateSchemaFolders"
	        Inputs="@(SchemaFolderOutputs)"
	        Outputs="@(SchemaFolderVerificationOutputs)">
		<Exec WorkingDirectory="$(ProjectDir)"
			Command="pnpm tsc -b tsconfig.json" />
	</Target>
	<Target Name="Generate" BeforeTargets="NodeBuild;PrepareLint" />

	<ItemGroup>
		<ProjectReference Include="$(SolutionRoot)generators\typescript\npm\npm-typescript.esproj" />
	</ItemGroup>
</Project>
